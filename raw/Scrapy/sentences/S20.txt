Spiders Contracts¶
Spiders Contracts¶

New in version 0.15.
0.15 新版功能.

Note
注解

This is a new feature (introduced in Scrapy 0.15) and may be subject to minor functionality/API updates.
这是一个新引入(Scrapy 0.15)的特性，在后续的功能/API更新中可能有所改变，查看 release notes 来了解更新

Testing spiders can get particularly annoying and while nothing prevents you from writing unit tests the task gets cumbersome quickly.
测试spider是一件挺烦人的事情，尤其是只能编写单元测试(unit test)没有其他办法时，就更恼人了

Scrapy offers an integrated way of testing your spiders by the means of contracts.
 Scrapy通过合同(contract)的方式来提供了测试spider的集成方法

This allows you to test each callback of your spider by hardcoding a sample url and check various constraints for how the callback processes the response.
您可以硬编码(hardcode)一个样例(sample)url， 设置多个条件来测试回调函数处理repsponse的结果，来测试spider的回调函数

Each contract is prefixed with an @ and included in the docstring.
 每个contract包含在文档字符串(docstring)里，以 @ 开头

See the following example:
 查看下面的例子:

This callback is tested using three built-in contracts:
该回调函数使用了三个内置的contract来测试:

This contract (@url) sets the sample url used when checking other contract conditions for this spider.
该constract(@url)设置了用于检查spider的其他constract状态的样例url

This contract is mandatory.
 该contract是必须的，所有缺失该contract的回调函数在测试时将会被忽略:

This contract (@returns) sets lower and upper bounds for the items and requests returned by the spider.
该contract(@returns)设置spider返回的items和requests的上界和下界

The upper bound is optional:
 上界是可选的:

This contract (@scrapes) checks that all the items returned by the callback have the specified fields:
该contract(@scrapes)检查回调函数返回的所有item是否有特定的fields:

Use the check command to run the contract checks.
使用 check 命令来运行contract检查

Custom Contracts¶
自定义Contracts¶

If you find you need more power than the built-in scrapy contracts you can create and load your own contracts in the project by using the SPIDER_CONTRACTS setting:
如果您想要比内置scrapy contract更为强大的功能，可以在您的项目里创建并设置您自己的 contract，并使用 SPIDER_CONTRACTS 设置来加载:

Each contract must inherit from scrapy.contracts.Contract and can override three methods:
每个contract必须继承 scrapy.contracts.Contract 并覆盖下列三个方法:

This receives a dict as an argument containing default arguments for Request object.
接收一个 字典(dict) 作为参数

Must return the same or a modified version of it.
该参数包含了所有 Request 对象 参数的默认值

This allows hooking in various checks on the response received from the sample request, before it’s being passed to the callback.
该函数在sample request接收到response后，传送给回调函数前被调用，运行测试

This allows processing the output of the callback.
该函数处理回调函数的输出

Iterators are converted listified before being passed to this hook.
迭代器(Iterators)在传输给该函数前会被列表化(listified)

Here is a demo contract which checks the presence of a custom header in the response received.
该样例contract在response接收时检查了是否有自定义header

Raise scrapy.exceptions.ContractFail in order to get the failures pretty printed:
 在失败时Raise scrapy.exceptions.ContractFaild 来展现错误:


Scrapy shell¶
Scrapy终端(Scrapy shell)¶

The Scrapy shell is an interactive shell where you can try and debug your scraping code very quickly, without having to run the spider.
Scrapy终端是一个交互终端，供您在未启动spider的情况下尝试及调试您的爬取代码

It’s meant to be used for testing data extraction code, but you can actually use it for testing any kind of code as it is also a regular Python shell.
 其本意是用来测试提取数据的代码，不过您可以将其作为正常的Python终端，在上面测试任何的Python代码

The shell is used for testing XPath or CSS expressions and see how they work and what data they extract from the web pages you’re trying to scrape.
该终端是用来测试XPath或CSS表达式，查看他们的工作方式及从爬取的网页中提取的数据

It allows you to interactively test your expressions while you’re writing your spider, without having to run the spider to test every change.
 在编写您的spider时，该终端提供了交互性测试您的表达式代码的功能，免去了每次修改后运行spider的麻烦

Once you get familiarized with the Scrapy shell, you’ll see that it’s an invaluable tool for developing and debugging your spiders.
一旦熟悉了Scrapy终端后，您会发现其在开发和调试spider时发挥的巨大作用

We highly recommend you install IPython, specially if you’re working on Unix systems (where IPython excels).
我们强烈推荐您安装 IPython ，特别是如果您使用Unix系统(IPython 在Unix下工作的很好)

See the IPython installation guide for more info.
 详情请参考 IPython installation guide 

Where the  is the URL you want to scrape.
 是您要爬取的网页的地址

When using relative file paths, be explicit and prepend them with ./ (or ../ when relevant).
Scrapy终端仅仅是一个普通的Python终端(或 IPython )

scrapy shell index.html will not work as one might expect (and this is by design, not a bug).
其提供了一些额外的快捷方式

The Scrapy shell automatically creates some convenient objects from the downloaded page, like the Response object and the Selector objects (for both HTML and XML content).
这些对象有:

Here’s an example of a typical shell session where we start by scraping the http://scrapy.org page, and then proceed to scrape the https://reddit.com page.
下面给出一个典型的终端会话的例子

Finally, we modify the (Reddit) request method to POST and re-fetch it getting an error.
 在该例子中，我们首先爬取了 http://scarpy.org 的页面，而后接着爬取 http://slashdot.org 的页面

We end the session by typing Ctrl-D (in Unix systems) or Ctrl-Z in Windows.
 最后，我们修改了(Slashdot)的请求，将请求设置为POST并重新获取， 得到HTTP 405(不允许的方法)错误

Keep in mind that the data extracted here may not be the same when you try it, as those pages are not static and could have changed by the time you test this.
需要注意的是，由于爬取的页面不是静态页，内容会随着时间而修改， 因此例子中提取到的数据可能与您尝试的结果不同

The only purpose of this example is to get you familiarized with how the Scrapy shell works.
 该例子的唯一目的是让您熟悉Scrapy终端

First, we launch the shell:
首先，我们启动终端:

Then, the shell fetches the URL (using the Scrapy downloader) and prints the list of available objects and useful shortcuts (you’ll notice that these lines all start with the [s] prefix):
接着该终端(使用Scrapy下载器(downloader))获取URL内容并打印可用的对象及快捷命令(注意到以 [s] 开头的行):

After that, we can start playing with the objects:
之后，您就可以操作这些对象了:

Invoking the shell from spiders to inspect responses¶
在spider中启动shell来查看response¶

Sometimes you want to inspect the responses that are being processed in a certain point of your spider, if only to check that response you expect is getting there.
有时您想在spider的某个位置中查看被处理的response， 以确认您期望的response到达特定位置

This can be achieved by using the scrapy.shell.inspect_response function.
这可以通过 scrapy.shell.inspect_response 函数来实现


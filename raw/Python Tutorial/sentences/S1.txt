2.1.
2.1. 调用 Python 解释器¶

The Python interpreter is usually installed as /usr/local/bin/python on those machines where it is available;
Python 解释器通常被安装在目标机器的 /usr/local/bin/python 目录下

putting /usr/local/bin in your Unix shell’s search path makes it possible to start it by typing the command
将 /usr/local/bin 目录包含进 Unix shell 的搜索路径里，以确保可以通过输入:

to the shell.
命令来启动它

Since the choice of the directory where the interpreter lives is an installation option, other places are possible;
由于 Python 解释器的安装路径是可选的，这也可能是其他路径，你可以联系安装 Python 的用户或系统管理员确认

check with your local Python guru or system administrator.
(例如，/usr/local/python 就是一个常见的选择)

On Windows machines, the Python installation is usually placed in C:\Python27, though you can change this when you’re running the installer.
在 Windows 机器上，Python 通常安装在 C:\Python27 位置，当然你可以在运行安装向导时修改此值

To add this directory to your path, you can type the following command into the command prompt in a DOS box:
要想把此目录添加到你的 PATH 环境变量中，你可以在 DOS 窗口中输入以下命令:

Typing an end-of-file character (Control-D on Unix, Control-Z on Windows) at the primary prompt causes the interpreter to exit with a zero exit status.
通常你可以在主窗口输入一个文件结束符( Unix 系统是 Control-D，Windows 系统是 Control-Z )让解释器以 0 状态码退出

If that doesn’t work, you can exit the interpreter by typing the following command: quit().
如果它不起作用，你可以通过输入 quit() 命令退出解释器

The interpreter’s line-editing features usually aren’t very sophisticated.
Python 解释器具有简单的行编辑功能

On Unix, whoever installed the interpreter may have enabled support for the GNU readline library, which adds more elaborate interactive editing and history features.
在 Unix 系统上，任何 Python 解释器都可能已经添加了 GNU readline 库支持，这样就具备了精巧的交互编辑和历史记录等功能

Perhaps the quickest check to see whether command line editing is supported is typing Control-P to the first Python prompt you get.
在 Python 主窗口中输入 Control-P 可能是检查是否支持命令行编辑的最简单的方法

If it beeps, you have command line editing;
如果发出嘟嘟声(计算机扬声器)，则说明你可以使用命令行编辑功能

see Appendix Interactive Input Editing and History Substitution for an introduction to the keys.
更多快捷键的介绍请参考 交互式输入行编辑历史回溯

If nothing appears to happen, or if ^P is echoed, command line editing isn’t available;
 如果没有任何声音，或者显示 ^P 字符，则说明命令行编辑功能不可用

you’ll only be able to use backspace to remove characters from the current line.
你只能通过退格键从当前行删除已键入的字符并重新输入

The interpreter operates somewhat like the Unix shell: when called with standard input connected to a tty device, it reads and executes commands interactively;
Python 解释器有些操作类似 Unix shell：当使用终端设备(tty)作为标准输入调用时，它交互地解释并执行命令

when called with a file name argument or with a file as standard input, it reads and executes a script from that file.
当使用文件名参数或以文件作为标准输入调用时，它读取文件并将文件作为 脚本 执行

A second way of starting the interpreter is python -c command [arg] ..., which executes the statement(s) in command, analogous to the shell’s -c option.
第二种启动 Python 解释器的方法是 python -c command [arg] ...，这种方法可以在 命令行 执行 Python 语句，类似于 shell 中的 -c 选项

Since Python statements often contain spaces or other characters that are special to the shell, it is usually advised to quote command in its entirety with single quotes.
由于 Python 语句通常会包含空格或其他特殊 shell 字符，一般建议将 命令 用单引号包裹起来

Some Python modules are also useful as scripts.
有一些 Python 模块也可以当作脚本使用

These can be invoked using python -m module [arg] ..., which executes the source file for module as if you had spelled out its full name on the command line.
你可以使用 python -m module [arg] ... 命令来调用它们，这类似在命令行中键入完整的路径名执行 模块 源文件一样

When a script file is used, it is sometimes useful to be able to run the script and enter interactive mode afterwards.
使用脚本文件时，经常会运行脚本然后进入交互模式

This can be done by passing -i before the script.
这也可以通过在脚本之前加上 -i 参数来实现

All command-line options are described in Command line and environment.
所有的命令行参数详细描述在 命令行和环境 

2.1.1.
2.1.1. 参数传递¶

When known to the interpreter, the script name and additional arguments thereafter are turned into a list of strings and assigned to the argv variable in the sys module.
调用解释器时，脚本名和附加参数传入一个名为 sys.argv 的字符串列表

You can access this list by executing import sys.
你能够通过执行 import sys 来获取这个列表，列表的长度大于等于1

The length of the list is at least one;
没有给定脚本和参数时，它至少也有一个元素：sys.argv[0] 此时为空字符串

Continuation lines are needed when entering a multi-line construct.
使用 -m 模块 参数时，sys.argv[0] 被设定为指定模块的全名

As an example, take a look at this if statement:
-c 指令 或者 -m 模块 之后的参数不会被 Python 解释器的选项处理机制所截获，而是留在 sys.argv 中，供脚本命令操作

With that declaration, all characters in the source file will be treated as having the encoding encoding, and it will be possible to directly write Unicode string literals in the selected encoding.
输入多行结构时需要从属提示符了，例如，下面这个 if 语句:

For example, to write Unicode literals including the Euro currency symbol, the ISO-8859-15 encoding can be used, with the Euro symbol having the ordinal value 164.
关于交互魔术更多的信息，请见 交互式输入行编辑历史回溯

Table Of Contents
2.2.1. 源程序编码¶


Available builders
Available builders

Internationalization
Internationalization

Note that you can extend sys.path within the conf file if your extensions live in another directory – but make sure you use absolute paths.
The configuration file is executed as Python code at build time (using execfile(), and with the current directory set to its containing directory), and therefore can execute arbitrarily complex code. Sphinx then reads simple names from the file’s namespace as its configuration.

That way, you can load an extension called extname from the subdirectory sphinxext.
Important points to note:

Changed in version 1.3: Can now be a list of extensions.
A list of strings that are module names of Sphinx extensions. These can be extensions coming with Sphinx (named sphinx.ext.*) or custom ones.

The encoding of all reST source files.
Note that you can extend sys.path within the conf file if your extensions live in another directory – but make sure you use absolute paths. If your extension path is relative to the configuration directory, use os.path.abspath() like so:

New in version 0.5: Previously, Sphinx accepted only UTF-8 encoded sources.
That way, you can load an extension called extname from the subdirectory sphinxext.

If given, a dictionary of parser classes for different source suffices.
The configuration file itself can be an extension; for that, you only need to provide a setup() function in it.

For example:
The file name extension of source files. Only files with this suffix will be read as sources. Default is '.rst'.

New in version 1.3.
The encoding of all reST source files. The recommended encoding, and the default value, is 'utf-8-sig'.

The document name of the “master” document, that is, the document that contains the root toctree directive.
New in version 0.5: Previously, Sphinx accepted only UTF-8 encoded sources.

A list of glob-style patterns that should be excluded when looking for source files.
The document name of the “master” document, that is, the document that contains the root toctree directive. Default is 'contents'.

Example patterns:
A list of glob-style patterns that should be excluded when looking for source files. [1] They are matched against the source file names relative to the source directory, using slashes as directory separators on all platforms.

exclude_patterns is also consulted when looking for static files in html_static_path and html_extra_path.
Example patterns:

New in version 1.0.
exclude_patterns is also consulted when looking for static files in html_static_path.

A list of paths that contain extra templates (or templates that overwrite builtin/theme-specific templates).
New in version 1.0.

Changed in version 1.3: As these files are not meant to be built, they are automatically added to exclude_patterns.
A list of document names that are present, but not currently included in the toctree. Use this setting to suppress the warning that is normally emitted in that case.

A string with the fully-qualified name of a callable (or simply a class) that returns an instance of TemplateBridge.
Deprecated since version 1.0: Use exclude_patterns instead.

A string of reStructuredText that will be included at the end of every source file that is read.
A list of directory paths, relative to the source directory, that are to be recursively excluded from the search for source files, that is, their subdirectories won’t be searched too. The default is [].

New in version 0.6.
New in version 0.4.

A string of reStructuredText that will be included at the beginning of every source file that is read.
Deprecated since version 1.0: Use exclude_patterns instead.

New in version 1.0.
A list of directory names that are to be excluded from any recursive operation Sphinx performs (e.g. searching for source files or copying static files). This is useful, for example, to exclude version-control-specific directories like 'CVS'. The default is [].

The name of the default domain.
New in version 0.5.

New in version 1.0.
Deprecated since version 1.0: Use exclude_patterns instead.

The name of a reST role (builtin or Sphinx extension) to use as the default role, that is, for text marked up `like this`.
A list of paths that contain extra templates (or templates that overwrite builtin/theme-specific templates). Relative paths are taken as relative to the configuration directory.

The default role can always be set within individual documents using the standard reST default-role directive.
A string with the fully-qualified name of a callable (or simply a class) that returns an instance of TemplateBridge. This instance is then used to render HTML documents, and possibly the output of other builders (currently the changes builder). (Note that the template bridge must be made theme-aware if HTML themes are to be used.)

New in version 0.4.
A string of reStructuredText that will be included at the end of every source file that is read. This is the right place to add substitutions that should be available in every file. An example:

If true, keep warnings as “system message” paragraphs in the built documents.
New in version 0.6.

The default is False, the pre-0.5 behavior was to always keep them.
A string of reStructuredText that will be included at the beginning of every source file that is read.

New in version 0.5.
New in version 1.0.

A list of warning types to suppress arbitrary warning messages.
The name of the default domain. Can also be None to disable a default domain. The default is 'py'. Those objects in other domains (whether the domain name is given explicitly, or selected by a default-domain directive) will have the domain name explicitly prepended when named (e.g., when the default domain is C, Python functions will be named “Python function”, not just “function”).

Sphinx supports following warning types:
New in version 1.0.

You can choose from these types.
The name of a reST role (builtin or Sphinx extension) to use as the default role, that is, for text marked up `like this`. This can be set to 'py:obj' to make `filter` a cross-reference to the Python function “filter”. The default is None, which doesn’t reassign the default role.

Now, this option should be considered experimental.
The default role can always be set within individual documents using the standard reST default-role directive.

New in version 1.4.
New in version 0.4.

If set to a major.minor version string like '1.1', Sphinx will compare it with its version and refuse to build if it is too old.
If true, keep warnings as “system message” paragraphs in the built documents. Regardless of this setting, warnings are always written to the standard error stream when sphinx-build is run.

New in version 1.0.
The default is False, the pre-0.5 behavior was to always keep them.

Changed in version 1.4: also accepts micro version string
New in version 0.5.

This value can be a dictionary specifying version requirements for extensions in extensions, e.g.
If set to a major.minor version string like '1.1', Sphinx will compare it with its version and refuse to build if it is too old. Default is no requirement.

This requires that the extension specifies its version to Sphinx (see Developing extensions for Sphinx for how to do that).
New in version 1.0.

New in version 1.3.
If true, Sphinx will warn about all references where the target cannot be found. Default is False. You can activate this mode temporarily using the -n command-line switch.

If true, Sphinx will warn about all references where the target cannot be found.
New in version 1.0.

New in version 1.0.
A list of (type, target) tuples (by default empty) that should be ignored when generating warnings in “nitpicky mode”. Note that type should include the domain name. An example entry would be ('py:func', 'int').

A list of (type, target) tuples (by default empty) that should be ignored when generating warnings in “nitpicky mode”.
New in version 1.1.

Note
The documented project’s name.

LaTeX builder always assign numbers whether this option is enabled or not.
A copyright statement in the style '2008, Author Name'.

New in version 1.3.
The major project version, used as the replacement for |version|. For example, for the Python documentation, this may be something like 2.6.

A dictionary mapping 'figure', 'table' and 'code-block' to strings that are used for format of figure numbers.
The full project version, used as the replacement for |release| and e.g. in the HTML templates. For example, for the Python documentation, this may be something like 2.6.0rc1.

New in version 1.3.
If you don’t need the separation provided between version and release, just set them both to the same value.

The scope of figure numbers, that is, the numfig feature numbers figures in which scope.
These values determine how to format the current date, used as the replacement for |today|.

New in version 1.3.
The default is no today and a today_fmt of '%B %d, %Y' (or, if translation is enabled with language, am equivalent %format for the selected locale).

A copyright statement in the style '2008, Author Name'.
New in version 0.5.

The major project version, used as the replacement for |version|.
The style name to use for Pygments highlighting of source code. The default style is selected by the theme for HTML output, and 'sphinx' otherwise.

The full project version, used as the replacement for |release| and e.g.
Changed in version 0.3: If the value is a fully-qualified name of a custom Pygments style class, this is then used as custom style.

If you don’t need the separation provided between version and release, just set them both to the same value.
A boolean that decides whether parentheses are appended to function and method role text (e.g. the content of :func:`input`) to signify that the name is callable. Default is True.

These values determine how to format the current date, used as the replacement for |today|.
A boolean that decides whether module names are prepended to all object names (for object types where a “module” of some kind is defined), e.g. for py:function directives. Default is True.

The default is no today and a today_fmt of '%B %d, %Y' (or, if translation is enabled with language, an equivalent format for the selected locale).
A boolean that decides whether codeauthor and sectionauthor directives produce any output in the built files.

Changed in version 1.4: Format specification was changed from strftime to Locale Data Markup Language.
A list of prefixes that are ignored for sorting the Python module index (e.g., if this is set to ['foo.'], then foo.bar is shown under B, not F). This can be handy if you document a project that consists of a single package. Works only for the HTML builder currently. Default is [].

Changed in version 1.4.1: Format specification was changed again from Locale Data Markup Language to strftime.
New in version 0.6.

The default language to highlight source code in.
Trim spaces before footnote references that are necessary for the reST parser to recognize the footnote, but do not look too nice in the output.

New in version 0.5.
New in version 0.6.

Changed in version 1.4: The default is now 'default'.
If true, doctest flags (comments looking like # doctest: FLAG, ...) at the ends of lines and  markers are removed for all code blocks showing interactive Python sessions (i.e. doctests). Default is true. See the extension doctest for more possibilities of including doctests.

A dictionary of options that modify how the lexer specified by highlight_language generates highlighted source code.
New in version 1.0.

New in version 1.3.
Changed in version 1.1: Now also removes .

A boolean that decides whether parentheses are appended to function and method role text (e.g.
These options influence Sphinx’ Native Language Support. See the documentation on Internationalization for details.

A boolean that decides whether module names are prepended to all object names (for object types where a “module” of some kind is defined), e.g.
The code for the language the docs are written in. Any text automatically generated by Sphinx will be in that language. Also, Sphinx will try to substitute individual paragraphs from your documents with the translation sets obtained from locale_dirs. In the LaTeX builder, a suitable language will be selected as an option for the Babel package. Default is None, which means that no translation will be done.

A boolean that decides whether codeauthor and sectionauthor directives produce any output in the built files.
New in version 0.5.

A list of prefixes that are ignored for sorting the Python module index (e.g., if this is set to ['foo.'], then foo.bar is shown under B, not F).
Currently supported languages by Sphinx are:

New in version 0.6.
New in version 0.5.

Trim spaces before footnote references that are necessary for the reST parser to recognize the footnote, but do not look too nice in the output.
Directories in which to search for additional message catalogs (see language), relative to the source directory. The directories on this path are searched by the standard gettext module.

New in version 0.6.
Internal messages are fetched from a text domain of sphinx; so if you add the directory ./locale to this settting, the message catalogs (compiled from .po format using msgfmt) must be in ./locale/language/LC_MESSAGES/sphinx.mo. The text domain of individual documents depends on gettext_compact.

If true, doctest flags (comments looking like # doctest: FLAG, ...) at the ends of lines and  markers are removed for all code blocks showing interactive Python sessions (i.e.
The default is [].

New in version 1.0.
New in version 1.1.

Changed in version 1.1: Now also removes .
If true, a document’s text domain is its docname if it is a top-level project file and its very base directory otherwise.

Changed in version 1.4: Support figure substitution
These options influence HTML as well as HTML Help output, and other builders that use Sphinx’ HTMLWriter class.

Currently supported languages by Sphinx are:
The “theme” that the HTML output should use. See the section about theming. The default is 'default'.

New in version 0.5.
New in version 0.6.

Directories in which to search for additional message catalogs (see language), relative to the source directory.
A dictionary of options that influence the look and feel of the selected theme. These are theme-specific. For the options understood by the builtin themes, see this section.

Internal messages are fetched from a text domain of sphinx;
New in version 0.6.

The default is [].
A list of paths that contain custom themes, either as subdirectories or as zip files. Relative paths are taken as relative to the configuration directory.

New in version 1.1.
New in version 0.6.

If true, a document’s text domain is its docname if it is a top-level project file and its very base directory otherwise.
The style sheet to use for HTML pages. A file of that name must exist either in Sphinx’ static/ path, or in one of the custom paths given in html_static_path. Default is the stylesheet given by the selected theme. If you only want to add or override a few things compared to the theme’s stylesheet, use CSS @import to import the theme’s stylesheet.

By default, the document markup/code.rst ends up in the markup text domain.
The “title” for HTML documentation generated with Sphinx’ own templates. This is appended to the  tag of individual pages, and used in the navigation bar as the “topmost” element. It defaults to ' v documentation', where the placeholders are replaced by the config values of the same name.

If true, Sphinx generates uuid information for version tracking in message catalogs.
A shorter “title” for the HTML docs. This is used in for links in the header and in the HTML Help docs. If not given, it defaults to the value of html_title.

If you want to accelerate the calculation, you can use python-levenshtein 3rd-party package written in C by using pip install python-levenshtein.
New in version 0.4.

The default is False.
A dictionary of values to pass into the template engine’s context for all pages. Single values can also be put in this dictionary using the -A command-line option of sphinx-build.

New in version 1.3.
New in version 0.5.

If true, Sphinx generates location information for messages in message catalogs.
If given, this must be the name of an image file that is the logo of the docs. It is placed at the top of the sidebar; its width should therefore not exceed 200 pixels. Default: None.

The default is True.
New in version 0.4.1: The image file will be copied to the _static directory of the output HTML, so an already existing file with that name will be overwritten.

New in version 1.3.
If given, this must be the name of an image file (within the static path, see below) that is the favicon of the docs. Modern browsers use this as icon for tabs, windows and bookmarks. It should be a Windows-style icon file (.ico), which is 16x16 or 32x32 pixels large. Default: None.

If true, Sphinx builds mo file for each translation catalog files.
New in version 0.4.

The default is True.
A list of paths that contain custom static files (such as style sheets or script files). Relative paths are taken as relative to the configuration directory. They are copied to the output directory after the theme’s static files, so a file named default.css will overwrite the theme’s default.css.

New in version 1.3.
Changed in version 0.4: The paths in html_static_path can now contain subdirectories.

To specify names to enable gettext extracting and translation applying for i18n additionally.
Changed in version 1.0: The entries in html_static_path can now be single files.

For example: gettext_additional_targets = ['literal-block', 'image'].
If this is not the empty string, a ‘Last updated on:’ timestamp is inserted at every page bottom, using the given strftime() format. Default is '%b %d, %Y' (or a locale-dependent equivalent).

The default is [].
If true, SmartyPants will be used to convert quotes and dashes to typographically correct entities. Default: True.

New in version 1.3.
Sphinx will add “permalinks” for each heading and description environment as paragraph signs that become visible when the mouse hovers over them.

The filename format for language-specific figures.
This value determines the text for the permalink; it defaults to "¶". Set it to None or the empty string to disable permalinks.

New in version 1.4.
New in version 0.6: Previously, this was always activated.

The “theme” that the HTML output should use.
Custom sidebar templates, must be a dictionary that maps document names to template names.

New in version 0.6.
The keys can contain glob-style patterns [1], in which case all matching documents will get the specified sidebars. (A warning is emitted when a more than one glob-style pattern matches for any document.)

A dictionary of options that influence the look and feel of the selected theme.
The values can be either lists or single strings.

New in version 0.6.
If a value is a list, it specifies the complete list of sidebar templates to include. If all or some of the default sidebars are to be included, they must be put into this list as well.

A list of paths that contain custom themes, either as subdirectories or as zip files.
The default sidebars (for documents that don’t match any pattern) are: ['localtoc.html', 'relations.html', 'sourcelink.html', 'searchbox.html'].

New in version 0.6.
If a value is a single string, it specifies a custom sidebar to be added between the 'sourcelink.html' and 'searchbox.html' entries. This is for compatibility with Sphinx versions before 1.0.

The style sheet to use for HTML pages.
Builtin sidebar templates that can be rendered are:

The “title” for HTML documentation generated with Sphinx’s own templates.
Example:

A shorter “title” for the HTML docs.
This will render the custom template windowssidebar.html and the quick search box within the sidebar of the given document, and render the default sidebars for all other pages (except that the local TOC is replaced by the global TOC).

New in version 0.4.
New in version 1.0: The ability to use globbing keys and to specify multiple sidebars.

A dictionary of values to pass into the template engine’s context for all pages.
Note that this value only has no effect if the chosen theme does not possess a sidebar, like the builtin scrolls and haiku themes.

New in version 0.5.
Additional templates that should be rendered to HTML pages, must be a dictionary that maps document names to template names.

If given, this must be the name of an image file (path relative to the configuration directory) that is the logo of the docs.
Example:

New in version 0.4.1: The image file will be copied to the _static directory of the output HTML, but only if the file does not already exist there.
This will render the template customdownload.html as the page download.html.

If given, this must be the name of an image file (path relative to the configuration directory) that is the favicon of the docs.
If true, generate domain-specific indices in addition to the general index. For e.g. the Python domain, this is the global module index. Default is True.

New in version 0.4: The image file will be copied to the _static directory of the output HTML, but only if the file does not already exist there.
This value can be a bool or a list of index names that should be generated. To find out the index name for a specific index, look at the HTML file name. For example, the Python module index has the name 'py-modindex'.

A list of paths that contain custom static files (such as style sheets or script files).
New in version 1.0.

Changed in version 0.4: The paths in html_static_path can now contain subdirectories.
If true, add a module index to the HTML documents. Default is True.

Changed in version 1.0: The entries in html_static_path can now be single files.
Deprecated since version 1.0: Use html_domain_indices.

A list of paths that contain extra files not directly related to the documentation, such as robots.txt or .htaccess.
If true, add an index to the HTML documents. Default is True.

As these files are not meant to be built, they are automatically added to exclude_patterns.
New in version 0.4.

New in version 1.2.
If true, the index is generated twice: once as a single page with all the entries, and once as one page per starting letter. Default is False.

Changed in version 1.4: The dotfiles in the extra directory will be copied to the output directory.
New in version 0.4.

If this is not None, a ‘Last updated on:’ timestamp is inserted at every page bottom, using the given strftime() format.
If true, the reST sources are included in the HTML build as _sources/name. The default is True.

Changed in version 1.4: Format specification was changed from strftime to Locale Data Markup Language.
Warning

Changed in version 1.4.1: Format specification was changed again from Locale Data Markup Language to strftime.
If this config value is set to False, the JavaScript search function will only display the titles of matching documents, and no excerpt from the matching contents.

If true, SmartyPants will be used to convert quotes and dashes to typographically correct entities.
If true (and html_copy_source is true as well), links to the reST sources will be added to the sidebar. The default is True.

Sphinx will add “permalinks” for each heading and description environment as paragraph signs that become visible when the mouse hovers over them.
New in version 0.6.

This value determines the text for the permalink;
If nonempty, an OpenSearch <http://opensearch.org> description file will be output, and all pages will contain a  tag referring to it. Since OpenSearch doesn’t support relative URLs for its search page location, the value of this option must be the base URL from which these documents are served (without trailing slash), e.g. "http://docs.python.org". The default is ''.

New in version 0.6: Previously, this was always activated.
This is the file name suffix for generated HTML files. The default is ".html".

Changed in version 1.1: This can now be a string to select the actual text of the link.
New in version 0.4.

Custom sidebar templates, must be a dictionary that maps document names to template names.
Suffix for generated links to HTML files. The default is whatever html_file_suffix is set to; it can be set differently (e.g. to support different web server setups).

The keys can contain glob-style patterns [1], in which case all matching documents will get the specified sidebars.
New in version 0.6.

The values can be either lists or single strings.
A string with the fully-qualified name of a HTML Translator class, that is, a subclass of Sphinx’ HTMLTranslator, that is used to translate document trees to HTML. Default is None (use the builtin translator).

If a value is a list, it specifies the complete list of sidebar templates to include.
If true, “(C) Copyright ...” is shown in the HTML footer. Default is True.

The default sidebars (for documents that don’t match any pattern) are: ['localtoc.html', 'relations.html', 'sourcelink.html', 'searchbox.html'].
New in version 1.0.

If a value is a single string, it specifies a custom sidebar to be added between the 'sourcelink.html' and 'searchbox.html' entries.
If true, “Created using Sphinx” is shown in the HTML footer. Default is True.

Builtin sidebar templates that can be rendered are:
New in version 0.4.

Example:
Encoding of HTML output files. Default is 'utf-8'. Note that this encoding name must both be a valid Python encoding name and a valid HTML charset value.

This will render the custom template windowssidebar.html and the quick search box within the sidebar of the given document, and render the default sidebars for all other pages (except that the local TOC is replaced by the global TOC).
New in version 1.0.

New in version 1.0: The ability to use globbing keys and to specify multiple sidebars.
If true, list items containing only a single paragraph will not be rendered with a  element. This is standard docutils behavior. Default: True.

Note that this value only has no effect if the chosen theme does not possess a sidebar, like the builtin scrolls and haiku themes.
New in version 1.0.

Additional templates that should be rendered to HTML pages, must be a dictionary that maps document names to template names.
Suffix for section numbers. Default: ". ". Set to " " to suppress the final dot on section numbers.

Example:
New in version 1.0.

This will render the template customdownload.html as the page download.html.
Language to be used for generating the HTML full-text search index. This defaults to the global language selected with language. If there is no support for this language, "en" is used which selects the English language.

If true, generate domain-specific indices in addition to the general index.
Support is present for these languages:

This value can be a bool or a list of index names that should be generated.
New in version 1.1.

New in version 1.0.
A dictionary with options for the search language support, empty by default. The meaning of these options depends on the language selected.

If true, add a module index to the HTML documents.
The English support has no options.

Deprecated since version 1.0: Use html_domain_indices.
The Japanese support has these options:

If true, add an index to the HTML documents.
New in version 1.1.

New in version 0.4.
Output file base name for HTML help builder. Default is 'pydoc'.

If true, the reST sources are included in the HTML build as _sources/name.
These options influence the epub output. As this builder derives from the HTML builder, the HTML options also apply where appropriate. The actual values for some of the options is not really important, they just have to be entered into the Dublin Core metadata.

Warning
The basename for the epub file. It defaults to the project name.

If this config value is set to False, the JavaScript search function will only display the titles of matching documents, and no excerpt from the matching contents.
The HTML theme for the epub output. Since the default themes are not optimized for small screen space, using the same theme for HTML and epub output is usually not wise. This defaults to 'epub', a theme designed to save visual space.

If true (and html_copy_source is true as well), links to the reST sources will be added to the sidebar.
The title of the document. It defaults to the html_title option but can be set independently for epub creation.

New in version 0.6.
The author of the document. This is put in the Dublin Core metadata. The default value is 'unknown'.

If nonempty, an OpenSearch description file will be output, and all pages will contain a  tag referring to it.
The language of the document. This is put in the Dublin Core metadata. The default is the language option or 'en' if unset.

This is the file name suffix for generated HTML files.
The publisher of the document. This is put in the Dublin Core metadata. You may use any sensible string, e.g. the project homepage. The default value is 'unknown'.

New in version 0.4.
The copyright of the document. It defaults to the copyright option but can be set independently for epub creation.

Suffix for generated links to HTML files.
An identifier for the document. This is put in the Dublin Core metadata. For published documents this is the ISBN number, but you can also use an alternative scheme, e.g. the project homepage. The default value is 'unknown'.

New in version 0.6.
The publication scheme for the epub_identifier. This is put in the Dublin Core metadata. For published books the scheme is 'ISBN'. If you use the project homepage, 'URL' seems reasonable. The default value is 'unknown'.

A string with the fully-qualified name of a HTML Translator class, that is, a subclass of Sphinx’s HTMLTranslator, that is used to translate document trees to HTML.
A unique identifier for the document. This is put in the Dublin Core metadata. You may use a random string. The default value is 'unknown'.

See also
The cover page information. This is a tuple containing the filenames of the cover image and the html template. The rendered html cover page is inserted as the first item in the spine in content.opf. If the template filename is empty, no html cover page is created. No cover at all is created if the tuple is empty. Examples:

set_translator()
The default value is ().

If true, “(C) Copyright ...” is shown in the HTML footer.
New in version 1.1.

New in version 1.0.
Additional files that should be inserted before the text generated by Sphinx. It is a list of tuples containing the file name and the title. If the title is empty, no entry is added to toc.ncx. Example:

If true, “Created using Sphinx” is shown in the HTML footer.
The default value is [].

New in version 0.4.
Additional files that should be inserted after the text generated by Sphinx. It is a list of tuples containing the file name and the title. This option can be used to add an appendix. If the title is empty, no entry is added to toc.ncx. The default value is [].

Encoding of HTML output files.
A list of files that are generated/copied in the build directory but should not be included in the epub file. The default value is [].

New in version 1.0.
The depth of the table of contents in the file toc.ncx. It should be an integer greater than zero. The default value is 3. Note: A deeply nested table of contents may be difficult to navigate.

If true, list items containing only a single paragraph will not be rendered with a  element.
This flag determines if a toc entry is inserted again at the beginning of it’s nested toc listing. This allows easier navitation to the top of a chapter, but can be confusing because it mixes entries of differnet depth in one list. The default value is True.

New in version 1.0.
These options influence LaTeX output.

Language to be used for generating the HTML full-text search index.
This value determines how to group the document tree into LaTeX source files. It must be a list of tuples (startdocname, targetname, title, author, documentclass, toctree_only), where the items are:

Support is present for these languages:
New in version 0.3: The 6th item toctree_only. Tuples with 5 items are still accepted.

Accelerating build speed
If given, this must be the name of an image file (relative to the configuration directory) that is the logo of the docs. It is placed at the top of the title page. Default: None.

Each language (except Japanese) provides its own stemming algorithm.
If true, the topmost sectioning unit is parts, else it is chapters. Default: False.

New in version 1.1: With support for en and ja.
New in version 0.3.

Changed in version 1.3: Added additional languages.
A list of document names to append as an appendix to all manuals.

A dictionary with options for the search language support, empty by default.
If true, generate domain-specific indices in addition to the general index. For e.g. the Python domain, this is the global module index. Default is True.

The English support has no options.
This value can be a bool or a list of index names that should be generated, like for html_domain_indices.

The Japanese support has these options:
New in version 1.0.

type is dotted module path string to specify Splitter implementation which should be derived from sphinx.search.ja.BaseSplitter.
If true, add a module index to LaTeX documents. Default is True.

You can choose from these modules:
Deprecated since version 1.0: Use latex_domain_indices.

To keep compatibility, 'mecab', 'janome' and 'default' are also acceptable.
If true, add page references after internal references. This is very useful for printed copies of the manual. Default is False.

Other option values depend on splitter value which you choose.
New in version 1.0.

For example:
Control whether to display URL addresses. This is very useful for printed copies of the manual. The setting can have the following values:

New in version 1.1.
New in version 1.0.

Changed in version 1.4: html_search_options for Japanese is re-organized and any custom splitter can be used by type settings.
Changed in version 1.1: This value is now a string; previously it was a boolean value, and a true value selected the 'inline' display. For backwards compatibility, True is still accepted.

The Chinese support has these options:
New in version 0.5.

The name of a JavaScript file (relative to the configuration directory) that implements a search results scorer.
A dictionary that contains LaTeX snippets that override those Sphinx usually puts into the generated .tex files.

New in version 1.2.
Keep in mind that backslashes must be doubled in Python string literals to avoid interpretation as escape sequences.

If true, images itself links to the original image if it doesn’t have ‘target’ option or scale related options: ‘scale’, ‘width’, ‘height’.
Keys that you may want to override include:

New in version 1.3.
Paper size option of the document class ('a4paper' or 'letterpaper'), default 'letterpaper'.

Output file base name for HTML help builder.
Point size option of the document class ('10pt', '11pt' or '12pt'), default '10pt'.

These options influence the Apple Help output.
Font package inclusion, default '\\usepackage{times}' (which uses Times and Helvetica). You can set this to '' to use the Computer Modern fonts.

Note
Inclusion of the “fncychap” package (which makes fancy chapter titles), default '\\usepackage[Bjarne]{fncychap}' for English documentation, '\\usepackage[Sonny]{fncychap}' for internationalized docs (because the “Bjarne” style uses numbers spelled out in English). Other “fncychap” styles you can try include “Lenny”, “Glenn”, “Conny” and “Rejne”. You can also set this to '' to disable fncychap.

Apple Help output will only work on Mac OS X 10.6 and higher, as it requires the hiutil and codesign command line tools, neither of which are Open Source.
Additional preamble content, default empty.

You can disable the use of these tools using applehelp_disable_external_tools, but the result will not be a valid help book until the indexer is run over the .lproj folders within the bundle.
Additional footer content (before the indices), default empty.

The basename for the Apple Help Book.
Keys that don’t need be overridden unless in special cases are:

The bundle ID for the help book bundle.
“inputenc” package inclusion, default '\\usepackage[utf8]{inputenc}'.

Warning
“fontenc” package inclusion, default '\\usepackage[T1]{fontenc}'.

You must set this value in order to generate Apple Help.
“maketitle” call, default '\\maketitle'. Override if you want to generate a differently-styled title page.

The development region.
“tableofcontents” call, default '\\tableofcontents'. Override if you want to generate a different table of contents or put content between the title page and the TOC.

The bundle version (as a string).
“printindex” call, the last thing in the file, default '\\printindex'. Override if you want to generate the index differently or append some content after the index.

The help bundle icon file, or None for no icon.
Keys that are set by other options and therefore should not be overridden are:

The product tag for use with applehelp_kb_url.
'docclass' 'classoptions' 'title' 'date' 'release' 'author' 'logo' 'releasename' 'makeindex' 'shorthandoff'

The URL for your knowledgebase server, e.g.
A dictionary mapping 'howto' and 'manual' to names of real document classes that will be used as the base for the two Sphinx classes. Default is to use 'article' for 'howto' and 'report' for 'manual'.

Defaults to None for no remote search.
New in version 1.0.

The URL for remote content.
A list of file names, relative to the configuration directory, to copy to the build directory when building LaTeX output. This is useful to copy files that Sphinx doesn’t copy automatically, e.g. if they are referenced in custom LaTeX added in latex_elements. Image files that are referenced in source files (e.g. via .. image::) are copied automatically.

e.g.
You have to make sure yourself that the filenames don’t collide with those of any automatically copied files.

Defaults to None for no remote content.
New in version 0.6.

If True, tell the help indexer to index anchors in the generated HTML.
Additional LaTeX markup for the preamble.

Controls the minimum term length for the help indexer.
Deprecated since version 0.5: Use the 'preamble' key in the latex_elements value.

Either a language specification (to use the built-in stopwords), or the path to a stopwords plist, or None if you do not want to use stopwords.
The output paper size ('letter' or 'a4'). Default is 'letter'.

Defaults to language, or if that is not set, to en.
Deprecated since version 0.5: Use the 'papersize' key in the latex_elements value.

Specifies the locale to generate help for.
The font size (‘10pt’, ‘11pt’ or ‘12pt’). Default is '10pt'.

Defaults to language, or if that is not set, to en.
Deprecated since version 0.5: Use the 'pointsize' key in the latex_elements value.

Defaults to the value of the environment variable CODE_SIGN_IDENTITY, which is set by Xcode for script build phases, or None if that variable is not set.
These options influence text output.

A list of additional arguments to pass to codesign when signing the help book.
Determines which end-of-line character(s) are used in text output.

Defaults to a list based on the value of the environment variable OTHER_CODE_SIGN_FLAGS, which is set by Xcode for script build phases, or the empty list if that variable is not set.
Default: 'unix'.

The path to the hiutil program.
New in version 1.1.

The path to the codesign program.
A string of 7 characters that should be used for underlining sections. The first character is used for first-level headings, the second for second-level headings and so on.

If True, the builder will not run the indexer or the code signing tool, no matter what other settings are specified.
The default is '*=-~"+`'.

This is mainly useful for testing, or where you want to run the Sphinx build on a non-Mac OS X platform and then complete the final steps on OS X for some reason.
New in version 1.1.

These options influence the epub output.
These options influence manual page output.

The basename for the epub file.
This value determines how to group the document tree into manual pages. It must be a list of tuples (startdocname, name, description, authors, section), where the items are:

The HTML theme for the epub output.
New in version 1.0.

A dictionary of options that influence the look and feel of the selected theme.
If true, add URL addresses after links. Default is False.

New in version 1.2.
New in version 1.1.

New in version 1.4.
These options influence Texinfo output.

The author of the document.
This value determines how to group the document tree into Texinfo source files. It must be a list of tuples (startdocname, targetname, title, author, dir_entry, description, category, toctree_only), where the items are:

The name of a person, organization, etc.
New in version 1.1.

New in version 1.4.
A list of document names to append as an appendix to all manuals.

The language of the document.
New in version 1.1.

The publisher of the document.
If true, generate domain-specific indices in addition to the general index. For e.g. the Python domain, this is the global module index. Default is True.

The copyright of the document.
This value can be a bool or a list of index names that should be generated, like for html_domain_indices.

An identifier for the document.
New in version 1.1.

The publication scheme for the epub_identifier.
Control how to display URL addresses.

A unique identifier for the document.
New in version 1.1.

The cover page information.
A dictionary that contains Texinfo snippets that override those Sphinx usually puts into the generated .texi files.

The default value is ().
Keys that you may want to override include:

New in version 1.1.
Number of spaces to indent the first line of each paragraph, default 2. Specify 0 for no indentation.


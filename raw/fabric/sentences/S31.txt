SSH behavior¶
SSH 行为¶

Fabric currently makes use of a pure-Python SSH re-implementation for managing connections, meaning that there are occasionally spots where it is limited by that library’s capabilities.
Fabric 使用纯 Python 实现的 SSH 库管理连接，也就是说可能会因此由于库的兼容性限制出现问题

Below are areas of note where Fabric will exhibit behavior that isn’t consistent with, or as flexible as, the behavior of the ssh command-line program.
下面几种情况下不能保证 Fabric 一些正常，或者和 ssh 控制台命令一样灵活

Unknown hosts¶
未知主机¶

SSH’s host key tracking mechanism keeps tabs on all the hosts you attempt to connect to, and maintains a ~/.ssh/known_hosts file with mappings between identifiers (IP address, sometimes with a hostname as well) and SSH keys.
SSH 的主机密钥 tracking 机制会纪录所有你打算连接的主机，并将主机的认证信息（一般是 IP 地址，但有时也可以是域名）和 SSH 密钥映射并保存在 ~/.ssh/known_hosts 文件中

(For details on how this works, please see the OpenSSH documentation.)
（对其工作方式感兴趣请参阅 OpenSSH 文档 

The paramiko library is capable of loading up your known_hosts file, and will then compare any host it connects to, with that mapping.
paramiko 库会加载 known_hosts 文件，并尝试将它和你要连接的主机映射起来，并提供参数设置用于决定连接未知主机（主机名或者 IP 不存在于 known_hosts 文件中）时的行为：

Whether to reject or add hosts, as above, is controlled in Fabric via the env.reject_unknown_hosts option, which is False by default for convenience’s sake.
Reject ：在不安全时拒绝连接

We feel this is a valid tradeoff between convenience and security;
它将抛出一个 Python 异常，因而终止 Fabric 会话，并输出“未知主机”信息

The point of SSH’s key/fingerprint tracking is so that man-in-the-middle attacks can be detected: if an attacker redirects your SSH traffic to a computer under his control, and pretends to be your original destination server, the host keys will not match.
在 Fabric 中控制究竟是拒绝连接韩式添加主机的选项是 env.reject_unknown_hosts ，方便起见其默认值是 False ，我们认为这是安全和便利之间合适的折中方案，对此有异议可以在 fabfile 中设置 env.reject_unknown_hosts = True 重设安全等级

Warning
在某些情况下，比如部署 EC2 时，你可能会打算忽略该问题，我们目前所采用的 SSH 层并没有提供对该操作的明确控制，但是可以通过跳过 known_hosts 文件的加载过程——如果 known_hosts 文件为空，则不会出现纪录不一致的问题

Enabling env.disable_known_hosts will leave you wide open to man-in-the-middle attacks!
警告

Pythonic remote execution
Pythonic remote execution

Enter search terms or a module, class or function name.
输入相关的术语，模块，类或者函数名称进行搜索


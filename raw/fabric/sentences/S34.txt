Context Managers¶
上下文管理器¶

Context managers for use with the with statement.
Context managers for use with the with statement.

Note
注解

When using Python 2.5, you will need to start your fabfile with from __future__ import with_statement in order to make use of the with statement (which is a regular, non __future__ feature of Python 2.6+.)
When using Python 2.5, you will need to start your fabfile with from __future__ import with_statement in order to make use of the with statement (which is a regular, non __future__ feature of Python 2.6+.)

Note
注解

If you are using multiple directly nested with statements, it can be convenient to use multiple context expressions in one single with statement.
If you are using multiple directly nested with statements, it can be convenient to use multiple context expressions in one single with statement. Instead of writing:

you can write:
you can write:

Note that you need Python 2.7+ for this to work.
Note that you need Python 2.7+ for this to work. On Python 2.5 or 2.6, you can do the following:

Finally, note that settings implements nested itself – see its API doc for details.
Finally, note that settings implements nested itself – see its API doc for details.

Context manager that keeps directory state when calling remote operations.
Context manager that keeps directory state when calling remote operations.

Any calls to run, sudo, get, or put within the wrapped block will implicitly have a string similar to "cd  && " prefixed in order to give the sense that there is actually statefulness involved.
Any calls to run, sudo, get, or put within the wrapped block will implicitly have a string similar to "cd  && " prefixed in order to give the sense that there is actually statefulness involved.

Note
注解

cd only affects remote paths – to modify local paths, use lcd.
cd only affects remote paths – to modify local paths, use lcd.

Because use of cd affects all such invocations, any code making use of those operations, such as much of the contrib section, will also be affected by use of cd.
Because use of cd affects all such invocations, any code making use of those operations, such as much of the contrib section, will also be affected by use of cd.

Like the actual ‘cd’ shell builtin, cd may be called with relative paths (keep in mind that your default starting directory is your remote user’s $HOME) and may be nested as well.
Like the actual ‘cd’ shell builtin, cd may be called with relative paths (keep in mind that your default starting directory is your remote user’s $HOME) and may be nested as well.

Below is a “normal” attempt at using the shell ‘cd’, which doesn’t work due to how shell-less SSH connections are implemented – state is not kept between invocations of run or sudo:
Below is a “normal” attempt at using the shell ‘cd’, which doesn’t work due to how shell-less SSH connections are implemented – state is not kept between invocations of run or sudo:

The above snippet will list the contents of the remote user’s $HOME instead of /var/www.
The above snippet will list the contents of the remote user’s $HOME instead of /var/www. With cd, however, it will work as expected:

Finally, a demonstration (see inline comments) of nesting:
Finally, a demonstration (see inline comments) of nesting:

Note
注解

This context manager is currently implemented by appending to (and, as always, restoring afterwards) the current value of an environment variable, env.cwd.
This context manager is currently implemented by appending to (and, as always, restoring afterwards) the current value of an environment variable, env.cwd. However, this implementation may change in the future, so we do not recommend manually altering env.cwd – only the behavior of cd will have any guarantee of backwards compatibility.

Note
注解

Space characters will be escaped automatically to make dealing with such directory names easier.
Space characters will be escaped automatically to make dealing with such directory names easier.

Changed in version 1.0: Applies to get and put in addition to the command-running operations.
在 1.0 版更改: Applies to get and put in addition to the command-running operations.

See also
参见

lcd
lcd

Force local terminal pipe be character, not line, buffered.
Force local terminal pipe be character, not line, buffered.

Only applies on Unix-based systems;
Only applies on Unix-based systems; on Windows this is a no-op.

Context manager for setting the given output groups to False.
Context manager for setting the given output groups to False.

groups must be one or more strings naming the output groups defined in output.
groups must be one or more strings naming the output groups defined in output. The given groups will be set to False for the duration of the enclosed block, and restored to their previous value afterwards.

For example, to hide the “[hostname] run:” status lines, as well as preventing printout of stdout and stderr, one might use hide as follows:
For example, to hide the “[hostname] run:” status lines, as well as preventing printout of stdout and stderr, one might use hide as follows:

Context manager for updating local current working directory.
Context manager for updating local current working directory.

This context manager is identical to cd, except that it changes a different env var (lcwd, instead of cwd) and thus only affects the invocation of local and the local arguments to get/put.
This context manager is identical to cd, except that it changes a different env var (lcwd, instead of cwd) and thus only affects the invocation of local and the local arguments to get/put.

Relative path arguments are relative to the local user’s current working directory, which will vary depending on where Fabric (or Fabric-using code) was invoked.
Relative path arguments are relative to the local user’s current working directory, which will vary depending on where Fabric (or Fabric-using code) was invoked. You can check what this is with os.getcwd. It may be useful to pin things relative to the location of the fabfile in use, which may be found in env.real_fabfile

New in version 1.0.
1.0 新版功能.

Append the given path to the PATH used to execute any wrapped commands.
Append the given path to the PATH used to execute any wrapped commands.

Any calls to run or sudo within the wrapped block will implicitly have a string similar to "PATH=$PATH: " prepended before the given command.
Any calls to run or sudo within the wrapped block will implicitly have a string similar to "PATH=$PATH: " prepended before the given command.

You may customize the behavior of path by specifying the optional behavior keyword argument, as follows:
You may customize the behavior of path by specifying the optional behavior keyword argument, as follows:

Note
注解

This context manager is currently implemented by modifying (and, as always, restoring afterwards) the current value of environment variables, env.path and env.path_behavior.
This context manager is currently implemented by modifying (and, as always, restoring afterwards) the current value of environment variables, env.path and env.path_behavior. However, this implementation may change in the future, so we do not recommend manually altering them directly.

New in version 1.0.
1.0 新版功能.

Prefix all wrapped run/sudo commands with given command plus &&.
Prefix all wrapped run/sudo commands with given command plus &&.

This is nearly identical to cd, except that nested invocations append to a list of command strings instead of modifying a single string.
This is nearly identical to cd, except that nested invocations append to a list of command strings instead of modifying a single string.

Most of the time, you’ll want to be using this alongside a shell script which alters shell state, such as ones which export or alter shell environment variables.
Most of the time, you’ll want to be using this alongside a shell script which alters shell state, such as ones which export or alter shell environment variables.

For example, one of the most common uses of this tool is with the workon command from virtualenvwrapper:
For example, one of the most common uses of this tool is with the workon command from virtualenvwrapper:

In the above snippet, the actual shell command run would be this:
In the above snippet, the actual shell command run would be this:

This context manager is compatible with cd, so if your virtualenv doesn’t cd in its postactivate script, you could do the following:
This context manager is compatible with cd, so if your virtualenv doesn’t cd in its postactivate script, you could do the following:

Which would result in executions like so:
Which would result in executions like so:

Finally, as alluded to near the beginning, prefix may be nested if desired, e.g.:
Finally, as alluded to near the beginning, prefix may be nested if desired, e.g.:

The result:
The result:

Contrived, but hopefully illustrative.
Contrived, but hopefully illustrative.

Alias to settings(hide('everything'), warn_only=True).
Alias to settings(hide('everything'), warn_only=True).

Useful for wrapping remote interrogative commands which you expect to fail occasionally, and/or which you want to silence.
Useful for wrapping remote interrogative commands which you expect to fail occasionally, and/or which you want to silence.

Example:
Example:

When used in a task, the above snippet will not produce any run: test -e /tmp/build line, nor will any stdout/stderr display, and command failure is ignored.
When used in a task, the above snippet will not produce any run: test -e /tmp/build line, nor will any stdout/stderr display, and command failure is ignored.

See also
参见

env.warn_only, settings, hide
env.warn_only, settings, hide

New in version 1.5.
1.5 新版功能.

Create a tunnel forwarding a locally-visible port to the remote target.
Create a tunnel forwarding a locally-visible port to the remote target.

For example, you can let the remote host access a database that is installed on the client host:
For example, you can let the remote host access a database that is installed on the client host:

The database might be installed on a client only reachable from the client host (as opposed to on the client itself):
The database might be installed on a client only reachable from the client host (as opposed to on the client itself):

remote_tunnel accepts up to four arguments:
remote_tunnel accepts up to four arguments:

Note
注解

By default, most SSH servers only allow remote tunnels to listen to the localhost interface (127.0.0.1).
By default, most SSH servers only allow remote tunnels to listen to the localhost interface (127.0.0.1). In these cases, remote_bind_address is ignored by the server, and the tunnel will listen only to 127.0.0.1.

Nest context managers and/or override env variables.
Nest context managers and/or override env variables.

settings serves two purposes:
settings serves two purposes:

Most usefully, it allows temporary overriding/updating of env with any provided keyword arguments, e.g.
Most usefully, it allows temporary overriding/updating of env with any provided keyword arguments, e.g. with settings(user='foo'):. Original values, if any, will be restored once the with block closes.

In addition, it will use contextlib.nested to nest any given non-keyword arguments, which should be other context managers, e.g.
In addition, it will use contextlib.nested to nest any given non-keyword arguments, which should be other context managers, e.g. with settings(hide('stderr'), show('stdout')):.

These behaviors may be specified at the same time if desired.
These behaviors may be specified at the same time if desired. An example will hopefully illustrate why this is considered useful:

The above task executes a run statement, but will warn instead of aborting if the ls fails, and all output – including the warning itself – is prevented from printing to the user.
The above task executes a run statement, but will warn instead of aborting if the ls fails, and all output – including the warning itself – is prevented from printing to the user. The end result, in this scenario, is a completely silent task that allows the caller to figure out what type of system the remote host is, without incurring the handful of output that would normally occur.

Thus, settings may be used to set any combination of environment variables in tandem with hiding (or showing) specific levels of output, or in tandem with any other piece of Fabric functionality implemented as a context manager.
Thus, settings may be used to set any combination of environment variables in tandem with hiding (or showing) specific levels of output, or in tandem with any other piece of Fabric functionality implemented as a context manager.

If clean_revert is set to True, settings will not revert keys which are altered within the nested block, instead only reverting keys whose values remain the same as those given.
If clean_revert is set to True, settings will not revert keys which are altered within the nested block, instead only reverting keys whose values remain the same as those given. More examples will make this clear; below is how settings operates normally:

The internal modification of env.host_string is nullified – not always desirable.
The internal modification of env.host_string is nullified – not always desirable. That’s where clean_revert comes in:

Brand new keys which did not exist in env prior to using settings are also preserved if clean_revert is active.
Brand new keys which did not exist in env prior to using settings are also preserved if clean_revert is active. When False, such keys are removed when the block exits.

New in version 1.4.1: The clean_revert kwarg.
1.4.1 新版功能: The clean_revert kwarg.

Set shell environment variables for wrapped commands.
Set shell environment variables for wrapped commands.

For example, the below shows how you might set a ZeroMQ related environment variable when installing a Python ZMQ library:
For example, the below shows how you might set a ZeroMQ related environment variable when installing a Python ZMQ library:

As with prefix, this effectively turns the run command into:
As with prefix, this effectively turns the run command into:

Multiple key-value pairs may be given simultaneously.
Multiple key-value pairs may be given simultaneously.

Note
注解

If used to affect the behavior of local when running from a Windows localhost, SET commands will be used to implement this feature.
If used to affect the behavior of local when running from a Windows localhost, SET commands will be used to implement this feature.

Context manager for setting the given output groups to True.
Context manager for setting the given output groups to True.

groups must be one or more strings naming the output groups defined in output.
groups must be one or more strings naming the output groups defined in output. The given groups will be set to True for the duration of the enclosed block, and restored to their previous value afterwards.

For example, to turn on debug output (which is typically off by default):
For example, to turn on debug output (which is typically off by default):

As almost all output groups are displayed by default, show is most useful for turning on the normally-hidden debug group, or when you know or suspect that code calling your own code is trying to hide output with hide.
As almost all output groups are displayed by default, show is most useful for turning on the normally-hidden debug group, or when you know or suspect that code calling your own code is trying to hide output with hide.

Alias to settings(warn_only=True).
Alias to settings(warn_only=True).

See also
参见

env.warn_only, settings, quiet
env.warn_only, settings, quiet

Fabric
Fabric

Pythonic remote execution
Pythonic remote execution

Enter search terms or a module, class or function name.
输入相关的术语，模块，类或者函数名称进行搜索


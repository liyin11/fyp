Dive Into Python
深入 Python :Dive Into Python 中文版

Python from novice to pro
Python 从新手到专家 [Dip_5.4b_CPyUG_Release]

Find: 
Find: 

16.2. Finding the path
16.2. 找到路径

When running Python scripts from the command line, it is sometimes useful to know where the currently running script is located on disk.
从命令行运行 Python 代码时，知道所运行代码在磁盘上的存储位置有时候是有必要的

This is one of those obscure little tricks that is virtually impossible to figure out on your own, but simple to remember once you see it.
这是一个不那么容易想起，但一想起就很容易解决的小麻烦

The key to it is sys.argv.
答案是 sys.argv

As you saw in Chapter 9, XML Processing, this is a list that holds the list of command-line arguments.
正如你在 第 9 章 XML 处理 中看到的，它包含了很多命令行参数

However, it also holds the name of the running script, exactly as it was called from the command line, and this is enough information to determine its location.
它也同样记录了运行脚本的名字，和你调用它时使用的命令一摸一样

If you have not already done so, you can download this and other examples used in this book.
如果您还没有下载本书附带的样例程序, 可以 下载本程序和其他样例程序

os.path.abspath deserves further explanation.
进一步地解释 os.path.abspath 是有必要的

It is very flexible;
它非常灵活，可以接受任何类型的路径名

Addendum. One reader was dissatisfied with this solution, and wanted to be able to run all the unit tests in the current directory, not the directory where regression.py is located.
补充. 一位读者对这个结果并不满意，他希望能够从当前路径运行所有单元测试，而不是从 regression.py 所在目录运行

He suggests this approach instead:
他建议以下面的代码加以取代：

This technique will allow you to re-use this regression.py script on multiple projects.
这个技术允许你在多个项目中重用 regression.py 代码

Just put the script in a common directory, then change to the project's directory before running it.
只需要将这个代码放在一个普通目录中，在运行项目前将路径更改为项目的目录

All of that project's unit tests will be found and tested, instead of the unit tests in the common directory where regression.py is located.
项目中所有的单元测试被找到并运行，而不仅仅局限于 regression.py 所在目录的单元测试

Copyright © 2000, 2001, 2002, 2003, 2004 Mark Pilgrim
Copyright © 2000, 2001, 2002, 2003, 2004 Mark Pilgrim


Dive Into Python
深入 Python :Dive Into Python 中文版

Python from novice to pro
Python 从新手到专家 [Dip_5.4b_CPyUG_Release]

Find: 
Find: 

15.5. Summary
15.5. 小结

Unit testing is a powerful concept which, if properly implemented, can both reduce maintenance costs and increase flexibility in any long-term project.
单元测试是一个强大的概念，使用得当的话既可以减少维护成本又可以增加长期项目的灵活性

It is also important to understand that unit testing is not a panacea, a Magic Problem Solver, or a silver bullet.
同样重要的是要意识到单元测试并不是“灵丹妙药”，也不是“银弹”

Writing good test cases is hard, and keeping them up to date takes discipline (especially when customers are screaming for critical bug fixes).
编写好的测试用例很困难，保持其更新更需要磨练 (特别是当顾客对修复严重的 Bug 大呼小叫之时)

Unit testing is not a replacement for other forms of testing, including functional testing, integration testing, and user acceptance testing.
单元测试不是其它形式测试的替代品，比如说功能性测试、集成测试以及可用性测试

But it is feasible, and it does work, and once you've seen it work, you'll wonder how you ever got along without it.
但它切实可行且功效明显，一旦相识，你会反问为什么以往没有应用它

This chapter covered a lot of ground, and much of it wasn't even Python-specific.
这一章涵盖了很多内容，有很多都不是 Python 所特有的

There are unit testing frameworks for many languages, all of which require you to understand the same basic concepts:
很多语言都有单元测试框架，都要求你理解相同的基本概念：

Additionally, you should be comfortable doing all of the following Python-specific things:
另外，你应该能够自如地做到如下 Python 的特有工作：

Copyright © 2000, 2001, 2002, 2003, 2004 Mark Pilgrim
Copyright © 2000, 2001, 2002, 2003, 2004 Mark Pilgrim


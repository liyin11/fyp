Scientific Applications¶
科学应用¶

Context¶
背景¶

Python is frequently used for high-performance scientific applications.
Python被经常使用在高性能科学应用中

It is widely used in academia and scientific projects because it is easy to write and performs well.
它之所以在学术和科研项目中得到 如此广泛的应用是因为它容易编写而且执行效果很好

Due to its high performance nature, scientific computing in Python often utilizes external libraries, typically written in faster languages (like C, or FORTRAN for matrix operations).
由于科学计算对高性能的要求，Python中相关操作经常借用外部库，通常是 以更快的语言（如C，或者FORTRAN来进行矩阵操作）写的

The main libraries used are NumPy, SciPy and Matplotlib.
其主要的库有 Numpy, Scipy 以及 Matplotlib

Going into detail about these libraries is beyond the scope of the Python guide.
关于这些库的细节超出了本指南的范围

However, a comprehensive introduction to the scientific Python ecosystem can be found in the Python Scientific Lecture Notes
不过， 关于Python的科学计算生态的综合介绍可以在这里找到 Python Scientific Lecture Notes

Tools¶
工具¶

IPython is an enhanced version of Python interpreter, which provides features of great interest to scientists.
IPython 是一个加强版Python解释器，它提供了科学工作者 感兴趣的特性

The inline mode allows graphics and plots to be displayed in the terminal (Qt based version).
其中，inline mode 允许将图像绘制到终端中（基于Qt）

Moreover, the notebook mode supports literate programming and reproducible science generating a web-based Python notebook.
 进一步的，notebook 模式支持文学化编程（literate programming， 译者注：作者这里可能是指其富文本性不是那个编程范式）与可重现性（reproducible， 译者注：作者可能是指每段程序可以单独重新计算的特性），它产生了一个基于web的 python 笔记本

This notebook allows you to store chunks of Python code along side the results and additional comments (HTML, LaTeX, Markdown).
这个笔记本允许你保存一些代码块，伴随着它们的计算结果以及增强的 注释（HTML,LaTex,Markdown）

The notebook can then be shared and exported in various file formats.
这个笔记本可以被共享并以各种文件格式导出

Libraries¶
库¶

NumPy is a low level library written in C (and FORTRAN) for high level mathematical functions.
NumPy 是一个用C和FORTRAN写的底层库，它提供一些高层 数学函数

NumPy cleverly overcomes the problem of running slower algorithms on Python by using multidimensional arrays and functions that operate on arrays.
NumPy通过多维数组和操作这些数组的函数巧妙地解决了Python运行算法较慢的问题

Any algorithm can then be expressed as a function on arrays, allowing the algorithms to be run quickly.
 任何算法只要被写成数组中的函数，就可以运行得很快

NumPy is part of the SciPy project, and is released as a separate library so people who only need the basic requirements can use it without installing the rest of SciPy.
NumPy是SciPy项目中的一部分，它被发布为一个独立的库，这样对于只需基本功能的人来说， 就不用安装SciPy的其余部分

NumPy is compatible with Python versions 2.4 through to 2.7.2 and 3.1+.
NumPy兼容Python 2.4-2.7.2以及3.1+

Numba is a NumPy aware Python compiler (just-in-time (JIT) specializing compiler) which compiles annotated Python (and NumPy) code to LLVM (Low Level Virtual Machine) through special decorators.
Numba 是一个针对NumPy的Python编译器（即时编译器,JIT） 它通过特殊的装饰器，将标注过的Python（以及NumPy）代码编译到LLVM（Low Level Virtual Machine，底层虚拟机）中

Briefly, Numba uses a system that compiles Python code with LLVM to code which can be natively executed at runtime.
简单地说，Python使用一种机制，用LLVM将Python代码编译为 能够在运行时执行的本地代码

SciPy is a library that uses NumPy for more mathematical functions.
SciPy 是基于NumPy并提供了更多的数学函数的库

SciPy uses NumPy arrays as the basic data structure, and comes with modules for various commonly used tasks in scientific programming, including linear algebra, integration (calculus), ordinary differential equation solving and signal processing.
 SciPy使用NumPy数组作为基本数据结构，并提供完成各种常见科学编程任务的模块， 包括线性代数，积分（微积分），常微分方程求解以及信号过程

Matplotlib is a flexible plotting library for creating interactive 2D and 3D plots that can also be saved as manuscript-quality figures.
Matplotlib 是一个可以灵活绘图的库，它 能够创建2D、3D交互式图形，并能保存成具有稿件质量（manuscript-quality）的图表

The API in many ways reflects that of MATLAB, easing transition of MATLAB users to Python.
 其API很像 MATLAB，这使得MATLAB用户 很容易转移到Python

Many examples, along with the source code to re-create them, are available in the matplotlib gallery.
在 matplotlib gallery 中可以找到很多例子以及实现它们的源代码（可以在此基础上再创造）

Pandas is data manipulation library based on Numpy which provides many useful functions for accessing, indexing, merging and grouping data easily.
Pandas 是一个基于NumPy的数据处理库，它提供了 许多有用的函数能轻松地对数据进行访问、索引、合并以及归类

The main data structure (DataFrame) is close to what could be found in the R statistical package;
其主要数据结构（DataFrame） 与R统计学包十分相近

that is, heterogeneous data tables with name indexing, time series operations and auto-alignment of data.
也就是，使用名称索引的异构数据（heterogeneous data）表、时间序列操作以及对数据的自动对准（auto-alignment）

Rpy2 is a Python binding for the R statistical package allowing the execution of R functions from Python and passing data back and forth between the two environments.
Rpy2 是一个对R统计学包的Python绑定， 它能够让Python执行R函数，并在两个环境中交换数据

Rpy2 is the object oriented implementation of the Rpy bindings.
Rpy2是 对 Rpy 绑定的面向对象实现

PsychoPy is a library for cognitive scientists allowing the creation of cognitive psychology and neuroscience experiments.
PsychoPy 是面向认知科学家的库，它允许创建 认知心理学和神经科学实验（译者注：指的是那种你坐在电脑前，给你一个刺激测 你反应的实验，基本上就是个UI）

The library handles presentation of stimuli, scripting of experimental design and data collection.
这个库能够处理刺激表示、实验设计脚本以及 数据收集

Resources¶
资源¶

Installation of scientific Python packages can be troublesome, as many of these packages are implemented as Python C extensions which need to be compiled.
安装这些科学计算Python包可能会有些麻烦，因为它们中很多是用Python的C扩展实现的， 这就意味着需要编译

This section lists various so-called scientific Python distributions which provide precompiled and easy-to-install collections of scientific Python packages.
这一节列举了各种科学计算Python发行版，它们提供了预编译编译 且易于安装的科学计算Python包

Many people who do scientific computing are on Windows, yet many of the scientific computing packages are notoriously difficult to build and install on this platform.
很多人在Windows平台上做科学计算，然而众所周知的是，其中很多科学计算包在该平台上 难以构建和安装

Christoph Gohlke however, has compiled a list of Windows binaries for many useful Python packages.
不过， Christoph Gohlke 将一系列有用的Python包编译成了Windows的二进制文件，其数量还在不断增长

The list of packages has grown from a mainly scientific Python resource to a more general list.
如果你在 Windows上工作，你也许想要看看

Continuum Analytics offers the Anaconda Python Distribution which includes all the common scientific Python packages as well as many packages related to data analytics and big data.
Continuum Analytics 提供了 Anaconda Python Distribution，它 拥有所有常见的Python科学包，也包括与数据分析和大数据相关的包

Anaconda itself is free, and Continuum sells a number of proprietary add-ons.
Anaconda是免费的 而Continuum销售一些专有的额外组件

Free licenses for the add-ons are available for academics and researchers.
学术研究者可以获取这些组件的免费许可

Canopy is another scientific Python distribution, produced by Enthought.
Canopy 是另一个Python科学发布版，由 Enthought 提供

A limited ‘Canopy Express’ variant is available for free, but Enthought charges for the full distribution.
其受限制的 ‘Canopy Express’ 版本 是免费提供的，但是Enthought负责完整版

Free licenses are available for academics.
学术研究者可以获取到免费许可

Follow @kennethreitz
本指南目前持续不断地更新与完善

Join Mailing List.
获得新版本和未来项目的更新

This guide is now available for pre-order in tangible book form!
订阅Newsletter

All proceeds are being directly donated to the DjangoGirls organization.
如果你享受这份指南,想要支持作者， 请戳Gittip

